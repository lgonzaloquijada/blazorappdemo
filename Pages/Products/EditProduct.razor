@using System
@using System.Collections.Generic
@using System.Linq
@using blazorappdemo.Models
@using blazorappdemo.Services

@page "/editproduct/{id:int}"
@inject IProductService ProductService
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@inject ILogger<EditProduct> logger;

<h3>Edit Product</h3>

<PageTitle>Edit Product</PageTitle>

<ModuleTitle Title="Edit Product" />

<button class="btn btn-dark" @onclick="@(()=> NavigationManager.NavigateTo("/products"))">Products</button>
<EditForm Model="@product" OnSubmit="@Save">
    <div class="row">
        <div class="col-8 form-group">
            <label for="title" class="col-form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="product.Title" required />
        </div>

        <div class="col-4 form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="product.Price" required />
        </div>

        <div class="col-12 form-group">
            <label for="description" class="col-form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="product.Description" required />
        </div>

        <div class="col-12 form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputSelect id="category" class="form-control" @bind-Value="product.CategoryId" required>
                <option value="">Select a category</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-12 form-group">
            <label for="image" class="col-form-label">ImageUrl</label>
            <InputText id="image" class="form-control" @bind-Value="product.Image" required />
        </div>

        <div class="col form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    private Product product = new Product();
    private List<Category> categories = [];

    protected override async Task OnParametersSetAsync()
    {
        logger.LogInformation("OnParametersSetAsync.");
        product = await ProductService.GetProduct(Id) ?? new Product();
        logger.LogInformation("Product: {product}", product.CategoryId);
    }
    protected override async Task OnInitializedAsync()
    {
        logger.LogInformation("OnInitializedAsync.");
        categories = await CategoryService.GetCategories().ContinueWith(x => x?.Result?.ToList()) ?? [];
    }

    private async Task Save()
    {
        product.Images = new string[1] { product.Image ?? "" };
        await ProductService.UpdateProduct(product);
        NavigationManager.NavigateTo("/products");
    }
}